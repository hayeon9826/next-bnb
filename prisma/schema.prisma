// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String?
  emailVerified DateTime?
  image         String?
  desc          String?
  rooms         Room[]
  accounts      Account[]
  sessions      Session[]
}

model Faq {
  id            Int      @id @default(autoincrement())
  title         String
  desc          String
}


model Room {
  id            Int    @id @default(autoincrement())
  images        String[]
  title         String
  address       String
  lat           String
  lng           String
  category      String
  desc          String
  bedroomDesc   String?
  price         Int
  freeCancel    Boolean   @default(false)
  selfCheckIn   Boolean   @default(false)
  officeSpace   Boolean   @default(false)
  hasMountainView   Boolean   @default(false)
  hasShampoo        Boolean   @default(false)
  hasFreeLaundry    Boolean   @default(false)
  hasAirConditioner Boolean   @default(false)
  hasWifi           Boolean   @default(false)
  hasBarbeque       Boolean   @default(false)
  hasFreeParking    Boolean   @default(false)
  userId        Int?
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
}


